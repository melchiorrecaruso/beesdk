Description of history of the Bee:

  Легенда:

    * Что нового?
    + Какие ошибки исправлены? 
    ! Какие ошибки на данный момент существуют? 

06.07.99. Ускоренная процедура Cut. Изменения в Cut/NewNode/DisposeNode.

   v2. Ускоренная в Account версия v0. -5%
   v3. Ускоренная в Tail версия v2.
   v3e. Поле k сделано типа Word. Scale вынесено из цикла и выполняется
        по переполнению первой в списке узлов ячейки.
   v3g. Избавляемся от поля Items.
   v3k. Другая система захвата/освобождения узлов (NewNode/Cut).
   Fix: При некоторых значениях Level (например, 8) файл распаковывается с ошибками.

   V3e. Ускорение:
     a. Проверка легальности адреса.
     b. Указатель на часть таблицы вместо копии таблицы.
     c. Проверка необходимости обрезания таблицы выполнена через флаг.

   q3.  Исправлена ошибка, приводящая к неправильной распаковке
        последних символов.
   Fix: Неправильно кодируются/раскодируются некоторые файлы (например,
        exe). Ошибка, вероятно, в 32-битной арифметике.

01.12.99

   q4. 16-битная версия.

15.12.99

   Первая версия Bee 0.1.

     - Обрабатывается файл конфигурации
       - Наборы параметров для сжатия файлов с указанным расширением

     - Распаковка сжатых файлов в каталог Unpacked\

     - Оптимизация параметров сжатия для выбранного набора файлов
       - Параметры сохраняются в файл Bee.Opt
       - Можно продолжить оптимизацию после остановки программы

     - Обрабатываются Solid архивы

     - Исключена эмуляция 64-разрядного умножения

18.12.99

     - При распаковке восстанавливаются атрибуты исходных файлов.

19.12.99

     - При оптимизации чередуется Solid и Flexible упаковка, что должно
       повысить качество оптимизации.

23.12.99

     - В расчете временной сложности процесса участвует только количество
       узлов в цепочке.

     - Параметры для наилучшего сжатия .pas и .txt файлов добавлены в тело
       программы.

24.12.99

     - Опция -m<N> ограничивает сверху уровень сжатия при оптимизации.

28.12.99

     - Улучшена оптимизация параметров, быстрее находятся оптимальые параметры.

30.12.99

     - Добавлена проверка на существование распаковываемого файла.
     - Распаковка файлов не в каталог Unpacked\, а на их место.

     Ошибки:

     - При распаковке и тестировании файлов выдаются не всегда их настоящие
       имена, иногда вместо имени выдается 'nul'. Fixed.

31.12.99, Версия Bee 0.2.

     - При распаковке и тестировании файлов всегда выдаются их настоящие имена.
     - Несколько увеличена скорость распаковки файлов (за счет устранения
       лишних обращений к файлам).

04.01.2000

     - Исправлена ошибка рекурсивного сканирования каталогов
     - Исправлена ошибка 64-разрядного умножения/деления, для расчета весов
       используется 32-разрядная арифметика. Совместимость с предыдущими
       версиями не поддерживается.
     - Максимальное сжатие возросло примерно на 0.4% от размера архива.

07.01.2000

     - Для записи таблицы параметров используется шестнадцатиричная система
       счисления.

10.01.2000

     - Исправлена ошибка, приводящая к созданию архивного файла слишком
       большого размера, когда файл перемещается в архив без сжатия из-за
       неуспешного сжатия. Хвост архивного файла отсекается.
     - Изменена структура таблицы параметров в целях увеличения сжатия.
       Совместимость с предидущими версиями не поддерживается.

     Ошибки:

     - При добавлении пустого каталога или файла, которого нет, происходит
       добавление всех файлов из текущего каталога.
     - При распаковке нельзя указать список распаковываемых файлов.
     - Нельзя модифицировать созданный ранее архив.
     - Опция -m<N> не действует при создании архива. Вообще структура для
       хранения параметров сжатия различных уровней не существует.
     - CRC выводится неправильно, после завершения ее расчета не вычитается
       единичка.

14.01.2000

     - Алгоритм ускорен на 10-15%. (Был ускорен! я не могу найти этот вариант!)
     - Оптимизация параметров выполняется быстрее, можно ожидать большей
       степени сжатия.

18.01.2000

     - Завершена работа 14.01.2000. Ускорения сжатия все-же не достигнуто.
     - При оптимизации строятся более быстрые по сравнению с вариантом
       14.01.2000 параметры -- за счет дополнения условия выхода из Account.
     - Ver 0.2c.

30 Jan 2000, Ver 0.2d

     - Сортировка имен файлов с учетом локализации Windows.
     - Изменена структура параметров. За первый проход находятся лучшие
       параметры. Совместимость с предидущими версиями не поддерживается.

10 Mar 2000

     + Файл конфигурации должен браться из каталога программы, 
       а не текущего каталога. Fixed 17 Mar 2000.
     ! Должен быть параметр <cfg>, указывающий, где взять файл конфигурации.
       // Fixed 12 May 2000
     ! Должен быть параметр <opt>, указывающий, где создавать
       файл оптимизированных параметров. // Fixed 12 May 2000
     ! Оптимизация параметров должна выполняться внешней программой, 
       а не самим архиватором. // Fixed 6 Jun 2000.
     ! Опция <m> не работает. // Fixed 21 Jun 2000.
     ! Инидикатор выполнения должен показывать % от общего объема работ, 
       а не от текущего файла. // Fixed 13 May 2000.
     + При отсутствии указанного архивируемого файла не выдается предупреждений,
       а в архив добавляется все содержимое каталога, а с опцией <-r> так же и
       подкаталогов. // Fixed 17 Mar 2000. 
     ! Сканирование файлов выполняется всегда, а не только при необходимости.
       Например, при вызове справки по командам архиватора, или при
       тестирование содержимого архива этого делать не нужно.

17 Mar 2000, Ver 0.2e

     - Файл конфигурации берется из каталога программы, а не текущего каталога.
     - При отсутствии указанного архивируемого файла выдается предупреждение,
       а в архив добавляются только найденные из указанных файлов.
     ! При упаковке с подкаталогами выдает лишнее предупреждение о 
       несуществующих файлах в подкаталогах. // Fixed 6 Jun 2000.
     ! Вылетел по EInOutError при распаковке каталога с подкаталогами. // Fixed 
       24 May 2000.

12 May 2000

     Легенда:

       * Что нового?
       + Какие ошибки исправлены? 
       ! Какие ошибки на данный момент существуют? 

     * Оптимизация выполняется за 8 проходов, все нечетные проходы (в том 
       числе последний) выполняют оптимизацию и размера архива, и скорости.
       Структура файла оптимизируемых параметров изменена.

     + Обрабатывается параметр <cfg>, указывающий, где взять файл конфигурации.
     + Обрабатывается параметр <opt>, указывающий, где создавать
       файл оптимизированных параметров. 

13 May 2000, Ver 0.2.7.

     * Индикатор показывает процент выполненной работы от общего объема работы.
     * В Log-файл при оптимизации помещается так же информация о числе 
       действий, выполненных для получения данного размера архива.

17 May 2000, Ver 0.2.8.

     + Исправлена мелкая ошибка отображения индикатора.
     * Изменена методика оптимизации. Оптимизация выполняется за два прохода,
       при необходимости продолжить - запускается еще раз.
     ! При распаковке с подкаталогами каталоги не создаются. // Fixed 24 May 
       2000.

18 May 2000, Ant

     * Реализован алгоритм построения дерева контекстов.

22 May 2000, Ver 0.2.9.

     + Теперь временные файлы создаются в текущем каталоге, а не в корне диска.
     + Исправлена ошибка в работе TFile, выход за границы буфера.

     * Несколько сокращен код за счет использования стандартных процедур.
     * Используется две формы отображения опций - сокращенная (по 
       умолчанию) и полная (по требованию).

     ! При оптимизации (и упаковке тоже?) файлов возникает неустойчивая 
       ошибка Access Violation. Сервер при запуске этой программы работает 
       неустойчиво.

24 May 2000, Ver 0.2.10.

     + Теперь при распаковке с подкаталогами подкаталоги создаются.

     * Интерфейс объектов сведен к использованию стандартных потоков, 
       порожденных от TStream. Скорость выполнения не пострадала.

     ! Как минимум, при работе программы на сервере под Windows NT 
       происходят ошибки в работе некоторых запущенных сервисов.
     ! При упаковке файлы с атрибутами Hidden не попадают в архив.

25 May 2000, Ver 0.3.0, совместимость с предыдущими версиями не поддерживается.

     * Создан поток TNulWriter, который используется вместо файла 'nul'
       в командах <o> и <t>, а так же при операции Skip при распаковке.
     * Изменена структура [MaxSymbol + 5] параметра, для более "гладкой"
       оптимизации таблицы параметров.

29 May 2000, Ver 0.3.1

     * Автоматизирована оптимизация по всем возможным уровням. Можно исключить 
       использование Batch файлов.

30 May 2000 

     + Исправлена ошибка оптимизации по всем уровням, приводящая к неправильной 
       оптимизации второго и последующих проходов.
     + Исправлена ошибка в TNullWriter, приводящая к сбою при копировании 
       без сжатия.

6 Jun 2000, Ver 0.3.4

     + Оптимизация параметров выполнена отдельной программой (BeeOpt ver 1.2)
       и исключена из текущей версии архиватора
     + При упаковке с подкаталогами больше не выдает лишнее предупреждение о 
       несуществующих файлах в подкаталогах.

21 Jun 2000, Ver 0.3.5

     * Появилась возможность описать параметры для разных степеней сжатия в 
       файле конфигурации.
     * Теперь во всех режимах обрабатывается опция -m
     * Правильно определяется номер версии архиватора и уровень сжатия

4 Jul 2000, Ver 0.3.6

     + Исправлена ошибка, возникающая при распаковке архива.
     * Размер Solid архива несколько сокращен.

9 Jul 2000, Ver 0.4.0, совместимость с предыдущими версиями не поддерживается. 

     * Изменена структура заголовков файлов в архиве. 
     * Появилась возможность указывать размер словаря, от 8 до 32M.

     + Исправлена ошибка при архивации без сжатия, когда программа все-же
       пытается сжимать.

     ! (1) Не восстанавливает исходное время распакованных файлов.

11 Jul 2000, Ver 0.4.1

     * Более аккуратно выполнен захват и освобождение памяти для словаря.
     * Дополнительная память, необходимая для хранения списка удаленных узлов,
       используется только во время обрезания дерева.

     * Выполнено ~25% оптимизации параметров.
       Отправлено на тестирование в RU.COMPRESS.

       English Text (condoyle.txt)       2,042,760

         bee 0.41 m1d2                      555,460  1:26.18  1:32.35
         bee 0.41 m2d2                      530,647  2:23.83  2:35.44
         bee 0.41 m2d3                      517,426  2:20.10  2:30.55
         bee 0.41 m3d2                      531,922  2:43.91  2:58.32
         bee 0.41 m3d3                      514,720  2:40.17  2:54.03

       Russian Text (stand.txt)         1,639,139

         bee 0.41 m1d2                      500,028  1:11.61  1:15.47
         bee 0.41 m2d2                      480,818  2:00.07  2:03.70
         bee 0.41 m2d3                      463,411  1:55.39  1:58.80
         bee 0.41 m3d2                      482,367  2:16.74  2:19.99
         bee 0.41 m3d3                      462,585  2:13.54  2:16.57

       C-sources (Watcom 10.0)          1,890,501

         bee 0.41 m1d2                      256,096  1:13.26  1:17.89
         bee 0.41 m2d2                      240,807  2:16.96  2:21.41
         bee 0.41 m2d3                      229,818  2:09.31  2:12.72
         bee 0.41 m3d2                      245,890  4:07.13  4:10.70
         bee 0.41 m3d3                      235,346  3:59.64  4:03.99

       EXE (wcc386.exe WC 10.0)           536,624

         bee 0.41 m1d2                      280,280    33.67    34.82
         bee 0.41 m2d2                      273,966    43.23    44.50
         bee 0.41 m2d3                      273,853    39.44    40.60
         bee 0.41 m3d2                      277,160    42.90    43.90
         bee 0.41 m3d3                      276,978    39.67    40.38

       Fileware.doc (WinWord file)        427,520

         bee 0.41 m1d2                      119,022    18.04    19.54
         bee 0.41 m2d2                      113,074    30.92    33.83
         bee 0.41 m2d3                      112,598    27.40    29.65
         bee 0.41 m3d2                      112,777    34.61    37.30
         bee 0.41 m3d3                      112,124    30.54    32.62

       Dictionary (ca.fdb)                627,761   (from  foliant)

         bee 0.41 m1d2                      247,832    28.88    28.71
         bee 0.41 m2d2                      245,224    40.71    39.23
         bee 0.41 m2d3                      247,424    38.90    37.46
         bee 0.41 m3d2                      246,874    45.27    44.12
         bee 0.41 m3d3                      248,835    42.58    41.47

       Samples.xls                        445,440

         bee 0.41 m1d2                       85,376    19.64    20.79
         bee 0.41 m2d2                       78,737    35.43    36.25
         bee 0.41 m2d3                       74,731    30.03    31.14
         bee 0.41 m3d2                       75,622    44.39    45.22
         bee 0.41 m3d3                       73,797    39.78    40.71

       Os2.ini                            594,821

         bee 0.41 m1d2                      106,604    26.91    27.07
         bee 0.41 m2d2                       99,241    42.03    41.09
         bee 0.41 m2d3                       97,808    38.29    37.36
         bee 0.41 m3d2                       99,192  1:18.76  1:16.51
         bee 0.41 m3d3                       97,552  1:09.25  1:07.54

19 Jul 2000

     Bee, Ver 0.4.2

     * Изменен принцип подсчета количества выполненных действий. Теперь
       подсчитывается Actions += Количество активных узлов на каждом шаге.
     * Actions является полем TEncoder, а не глобальной переменной.
     * Небольшие изменения в TNulWriter.

     * В результате всех изменений работа программы ускорилась на 8-10% (На
       архиве 3,5M 118 сек вместо 126)

     BeeOpt, Ver 1.3:

     * Выполняет автоматический выбор параметров для -m1...m3.
     * В одном файле конфигурации теперь могут храниться параметры для 
       нескольких каталогов.
     * Encoder иницализируется только один раз при запуске программы, 
       что должно ускорить работу BeeOpt.
     * Буферизовано чтение и запись конфигурации на диск.
     * Дублирующиеся параметры в файле конфигурации удаляются (остается 
       последний из них).

21 Jul 2000

     Bee, Ver 0.4.3

     * Несколько оптимизированы функции модуля Bee_Common. Для нескольких 
       строковых функций (везде, где возможно) используется процедура 
       SetLength.
     * Параметры 'Method=1' и 'Dictionary=2' прошиты в программе.
     * Появилось опция -pri<0..3>, позволяющая задавать приоритет процесса.
     * По умолчанию таблица параметров ищется по ключу '.Default' (а было - 
       'Default').

     ? Выяснилась следующая зависимость: На машинах с большим количеством RAM 
       > 16M версия Bee 0.4.0 работает на 10% быстрее, чем версия Bee 0.4.1.
       На машинах с объемом RAM < 32M наблюдается обратный эффект. В общем 
       случае это означает, что метод хранения удаленных узлов, используемый в 
       Bee 0.4.0, является более предпочтительным.

     BeeOpt, Ver 1.4:

     * Для записи на диск секций конфигурации используется TStrings.Text.
       Запись конфигурации на диск ускорена на 10%. 
     * Ускорены процедуры Hex и HexToStr.
     * Появилось опция -pri<0..3>, позволяющая задавать приоритет процесса.
     * Во время сохранения параметров устанавливается приоритет RealTime,
       так что прервать программу в этот момент (и потерять результаты 
       оптимизации) нельзя.
     * Оптимизируются только параметры, попадающие в список -m1..-m3, 
       и соседние с ними.
     * Раздельное сохранение в конфигурации только нужного блока параметров.
     
     + Исправлена ошибка освобождения памяти, возникавшая при освобождения
       TConfiguration.

23 Jul 2000

     BeeOpt, Ver 1.4.1:

     * Приняты дополнительные меры для предотвращения потери результатов 
       оптимизации в критических ситуациях (например, при отключении питания).
       При сохранении конфигурации существующая копируется во временный файл, 
       который удаляется при успешном сохранении. При чтении параметров сначала 
       проверяется наличие этого файла, и в случае его существования параметры 
       берутся из него.

26 Jul 2000
 
     Bee, Ver 0.4.5:

     * Несколько оптимизирован (?) код упаковщика, функции расчета Crc32.

     BeeOpt, Ver 1.4.2:

     * Несколько оптимизирован (?) код упаковщика, функции расчета Crc32.
     
     ! (1) Ошибка при сохранении BestQuality, не сохраняется дробная часть, 
           в итоге неправильно определяются уровни для дальнейшего уточнения.

28 Jul 2000

     Bee, Ver 0.4.6:

     * Выполнена мелкая чистка алгоритма. Работа с памятью ведется, как в 
       версии 0.4.1. На P100, 32M это самая быстрая версия из всех предыдущих.

29 Jul 2000

     BeeOpt, Ver 1.4.4:

     + (1) Правильно определяются уровни для дальнейшего уточнения. Ошибка
           заключалась в неправильном отбрасывании худших и при этом более 
           медленных вариантов, а не в ошибочном сохранении BestQuality.

30 Jul 2000

     Bee, Ver 0.4.7:
   
     * На P100, 32M это самая быстрая версия из всех предыдущих (быстрее, чем 
       Ver 0.4.6). Причина ускорения на машине с большим количеством памяти -
       хранение массива Cuts между чистками дерева.

01 Aug 2000

     Bee, Ver 0.4.8:

     * Скомпилировано на Delphi 5. Там, где необходимо, Integer заменен на 
       Cardinal.
    
     * Взяты текущие параметры сжатия. Вызывает сомнение Txt (не сделано даже 
       два прохода оптимизации), Doc (то же, + в тесте маленький файл), Ini (В 
       тесте файл большой, 590K, а у меня оптимизировалось на маленьких, 130K),
       в меньшей степени Exe (не выполнено даже два прохода оптимизации, хотя 
       результаты на моих тестах лучше, чем были на Bee от 11 Jul). Однако я 
       все-же посылаю на тестирование с _этими_ параметрами, не выбирая лучшие 
       из разных вариантов оптимизации. 

       Версия отправлена на тестирование в RU.COMPRESS. 

03 Aug 2000

     Bee, Ver 0.4.9:

     * Несколько оптимизирована работа с буфферизоваными файлами (подчищен 
       код).

     BeeOpt, Ver 1.4.6:

     + Устранена отладочная информация из BeeOpt.Cfg.
     + Уровни 1 и 2 проходятся только один раз.
     + Исправлен текст заключительного сообщения после оптимизации.
 
     * Скомпилирована под Delphi 5 со всеми текущими изменениями модулей Bee.

22 Aug 2000

     Bee, Ver 0.5.0, совместимость с предыдущими версиями не поддерживается,
     за исключением команды 'l'.

     * Обновляется счетчик самого длинного контекста, для которого не создается 
       продолжения.

     BeeOpt, Ver 1.5.0:

     * Версия, соответствующая Bee 0.5.0

24 Aug 2000
   
     * Bee_Files: работа с файлами TBufferizedReader и TBufferizedWriter
       выполнена через унаследованные методы THandleStream. Оптимизирован
       TNulWriter. Работа с файлами ускорена примерно на 5 процентов.

     * Bee_Files: TBufferizedReader переименован в TFileReader, 
       TBufferizedWriter переименован в TFileWriter.

25 Aug 2000

     * Bee_Configuration: Появилась возможность указывать параметры, оставляя 
       пробел до и после знака "=".

     BeeOpt:

     * Добавлена опция /C для сканирования всех вложенных подкаталогов 
       в поисках BeeOpt.Cfg и объединения их в один BeeOpt.Cfg в текущем 
       каталоге. 

       -- Среди дублирующихся параметров оставляется один.
       -- Порядок предпочтения дублирующихся параметров не определен.

10 Jan 2001

     ? В следующей версии предполагается использовать нейросети для построения 
       параметров налету, и генетическую оптимизацию для построения этой 
       нейросети на этапе обучения. Программа оптимизации должна быть оконная, 
       помещаемая в SysTray.

     ? Нейросеть должна учитывать, кроме прочего, наибольшее возможное 
       количество узлов, и текущее количество узлов в данной и предыдущей 
       точке пересчета.

     ? -- // -- и состояние данных, и состояние дерева контекстов.

     ? В BeeOpt и Bee можно ли отключить проверку ввода/вывода {$I-} ?
       Уменьшит ли это код? Ускорит ли это код?

     ! (2) [Fixed 18.01.2001] Не восстанавливает дату распакованных файлов! 
           (Восстанавливает не у всех файлов).

     ! (3) [Fixed 18.02.2001] Битый шрифт при выводе статистики на экран: . 
     ! (4) [Fixed 18.01.2001] Неровные строки при выводе длинных имен файлов.

     ? Конвертировать метод TFileWriter.WriteByte в процедуру, что сократит 
       код и время.

18 Jan 2001

     + (2) При распаковке восстанавливает дату файлов.
     + (4) Строки ровные при выводе длинных имен.

31 Jan 2001

     * Для вычисления функций Max () и Min () используется модуль Math.
     * BeeOpt поддерживает опции -d1, -d2, -d3.

16 Feb 2001, Bee ver 0.6.0, BeeOpt 1.6.0.

     * Более грамотно выполняется вычисления параметров.
     * Добавлены в BeeOpt и BeeOpt размеры словаря -d4 (32m) и -d5 (64m). 
     * Устранено лишнее ветвление во внутреннем цикле.
     * Исключена Solid-оптимизация, которая не имеет смысла на смеси файлов.

     * Совместимость с предыдущими версиями не поддерживается.

19 Feb 2001, Bee ver 0.6.1.

  + (3) Исправлен глюк при выводе статистики на экран. Теперь русские имена 
    файлов выводятся корректно.

  * Несколько изменена обработка параметров для ускорения работы архиватора. 
    Совместимость с предыдущими версиями не поддерживается.

12 Mar 2001

  BeeOpt:

  * Построена форма для отображения процесса оптимизации, живущая в Tray.
  * Порядок оптимизации параметров планируется изменить для сокращения 
    количества локальных минимумов.

14 Jun 2001

  BeeOpt:

  * Начата попытка реализовать генетический алгоритм для вычисления оптимальных 
    параметров сжатия.

09 Jul 2001

  BeeOpt Version 1.6 Beta 2, Bee Version 0.6 Beta 2:

  * Построена версия, взятая для основу для нового тестирования VyTest.

04.11.2001

  Попытка оптимизировать производительность по образцу, предлагаемому 
  by Evgeny Shelwien:

  * Везде умножение некоторого значения на 2 выполняется через сложение 
    его с самим собой. Стоп, а компилятор везде, где можно, так и делает!

  * Заменил имя входного файла с настройками с *.Cfg на *.Ini.

  * Несколько оптимизировал вычисление вероятностей (*.Account ());

06.11.2001

  * Выделил вторичный кодировщик в отдельный объект...

  + Исправлена ошибка, возникавшая при упаковке нескольких файлов с одинаковым 
    расширением, при отсутствии параметров для этого расширения.

  ? Исправить вывод на экран результатов работы архиватора (см. Rar и 7-Zip)

12.11.2001

  * Bee_Files: Несколько оптимизировал чтение и запись в буферизованный поток 
    больших блоков данных. Исключил отдельные процедуры для чтения или записи 
    одного байта.

  * Исправил вывод на экран результатов работы архиватора. Теперь сообщение об 
    обработке каждого файла выводится с первой позиции строки, а проценты 
    выводятся реже и точностью до 0.1%. Перед обработкой каждого файла проценты 
    выводятся один раз обязательно.

  * TSecondaryEncoder.Flush: При сжатии в среднем один из 32 файлов имеет 
    размер на 1 байт меньше.

17.11.2001

  BeeOpt 0.6.3:
  -------------
    * Используются структуры данных, соответствующие последнему варианту Bee
      от 12.11.2001.

    * Приоритет оптимизатора устанавливается в Idle при старте программы,
      и не изменяется в ходе ее выполнения.

    * Сжатие выполняется блоками по 4k, после чего вызывается обработчик
      событий. Реакция программы на системные события возросла без заметного
      ущерба производительности.

    * Оптимизатор автоматически увелиивает размер словаря после пересчета 5000
      вариантов с текущим размером словаря. 

    * Протокол работы оптимизатора размещается в файле <SourceName>.Log.Txt.
      Дополнительно в файл протокола выводится информация о количестве
      просчитанных вариантов и текущем размере словаря.

    * Несколько изменил вид основной формы BeeOpt:

        - Исправил надписи на закладках, добавил сведения о размере словаря;

        - Сделал более крупный шрифт в строке статуса, в тексте закладок
          Manual и About;

        - Выполнил окно более крупным, с выделенными с помощью
          рамок его частями. Значок в Tray - более незаметный;

        - Исправил мелкие ошибки.

    + Окно оптимизатора не разворачивалось при первом его вызове из Tray.
      Теперь разворачивается.

18.11.2001

  Подготовил законченный пакет Bee 0.6.3 и BeeOpt 0.6.3, за исключением
  текстовой документации и построенных параметров.

12.12.2001

  * С целью ускорения, изменена процедура получения нового узла. Процедура
    разбита на две части, обрабатывающие отдельно два случая: еще есть
    неиспользованные узлы в массиве, или узлов уже нет, и нужно брать из
    списка освобожденных узлов.

  * Диапазон допустимых значений ключа /d расширен до 1..7.

22.05.2002

  BeeOpt:

  + Добавлена опция -recalculate и возможность пересчитать оценкт всех наборов
    параметров

28.05.2002

  BeeOpt:

  * По опции -recalculate дополнительно очищается вся статистика.
  * Исправлен частный случай переоценки особей при переполненной популяции.
  * Исправлен расчет числа усовершенствований.

  + Добавлены дополнительные сообщения о выполняемых частных случаях в
    StatusBar.

04.05.2002

  BeeOpt:

  + Добавлена опция -pri<0..3> для задания приоритета утилиты.
    По дефолту, как и было раньше, используется -pri0.

06.05.2002

  Bee:

  * BugFix: Исправлена ошибка при распаковке или просмотре отсутствующего
    архива.

  * Performance: Производительность увеличена на ~1% за счет более грамотного
    NewNode ().

  + Пытаемся более грамотно работать с детерминированными контекстами.

20.06.2002

  BeeOpt:

  + Включает выбранный приоритет (по дефолту - Idle) только перед началом
    оптимизации.

  + Добавил мутацию пачки битов.

  + Особь генерируется случайным образом только для пустой популяции. Во всех
    остальных случаем она наследуется от двух родителей.

  + Добавил вывод "процента усовершенствований".

  Bug:

  ! Неустойчивая оптимизация.

  Note:

  Отличная версия! Ее можно брать за основу для построения релиза Bee 0.7.1.

21.06.2002

  + Устранил мутацию пачки битов - этот механизм внес неустойчивость
    оптимизации.

23.06.2002

  + Диапазон опции "-d" расширен до [0..9].

  + Используется обновляемое исключение, статистика обновляется только у самого
    длинного использованного контекста.

  * Мелкие исправления.

26.06.2002

  Bee:

  + Основной инкремент = 16.

  BeeOpt:

  + При оптимизации используется -d0, -d1, ... -d9
  + Смена предка приводит к смене источника хромосом, а не генов (кроссовер на
    уровне байтов).
  + Возможен равновероятный выбор предка из групп с номерами [-1..1].
  + Кроссовер 0.15%.

  Релиз:

  Bee 0.7.3, BeeOpt 1.7.3.

  ------------------------

  Эксперимент... Удалить... Хрен там удалить! Это новый релиз!

  + Исключено накопление P (Esc) для детерминированных контекстов.
  + Исключено неиспользуемое сужение кодового пространства для
    детерминированных контекстов.

  Релиз:

  Bee 0.7.4, BeeOpt 0.7.4.

28.06.2002

  + Некоторая оптимизация расчета вероятностей. В результате, кроме бонуса
    производительности, меньше теряется кодовое пространство, что влияет
    (положительно?) на эффективность.

    Проверяем... Хорошо.

  Релиз:

  Bee 0.7.4.b, BeeOpt 0.7.4.b.

01.07.2002

  Bee:

  + Параметр [MaxSymbol + 3] вычисляется по экспоненциальной формуле.

  Релиз:

  Bee 0.7.4.c, BeeOpt 0.7.4.c, совместимости нет.

02.07.2002

  BeeOpt:

  + Добавлен параметр -hide для скрытого выполнения приложения. При
    использовании этого параметра приложение не видно в TaskBar и в IconTray,
    но видно в TaskManager.

  Промежуточная версия:

  Bee 0.7.4.d, BeeOpt 0.7.4.d, совместим с 0.7.4.c.

12.07.2002

  Bee, BeeOpt:

  + В Account () заменил умножение серией вычитаний. 
    Предположительно, возможно некоторое ускорение.
    Предположитнльно, возможно увеличение эффективности за счет сокращения
    потерь точности.

  Промежуточная версия:

  - Bee 0.7.4.e, BeeOpt 0.7.4.e;
  - Не совместим с 0.7.4.c, но хорошие параметры для 0.7.4.c-d дают
    хорошее сжатие для 0.7.4.e.

  ? Какой алгоритм лучше? Bee 0.7.4.e или Bee 0.7.4.d?

  BeeOpt:

  ! Кажется, существуют случаи, когда при переходе к буферу большего размера
    старые параметры дают результат хуже,чем при буфере меньше горазмера.

    Поэтому нужно пересчитывать параметры для нового размера буфера при
    изменении этого размера.

24.07.2002

  Bee_BasePacker.Pas:

  + Устранил в Account () лишнее умножение в двух частных случаях.

  BeeOpt:

  * Перед началом каждого нового размера словаря выполняется переоценка
    каждой популяции с новым размером словаря.

  * ProcessMessage вызывается через каждый 1 Кбайт входных данных.

  Промежуточная версия:

  - Bee 0.7.4.f, BeeOpt 0.7.4.f;
    Производительность увеличилась на ~2%.
    Параметры для Bee 0.7.4e годятся и для Bee 0.7.4f, но из-за округления
    остатка в другую сторону - эффективность несколько отличается.

18.12.2002

  BeeOpt:

  * Модифицировал генетический алгоритм генерации и отбора вариантов.

12.01.2003

  Bee_BasePacker.Pas:

  * Исправил ошибку, приводящую к потере степени сжатия на некоторых файлах.

24.01.2003

  Bee_BasePacker.Pas:

  * Переписал алгоритм чистки дерева контекстов.
    Удаляются узлы, вышедшие за пределы входного буфера.

  ! Есть ошибки при чистке дерева.

  / Чистить список List сразу после выполнения Cut (внутри Cut).

29.01.2003

  Bee_BasePacker.Pas:

  * Исправил ошибки в реализации чистки дерева контекстов.
    Список List чистится сразу после выполнения Cut (внутри DelNode).

01.02.2003

  / После тестирования стало ясно, что использовать полученный ранее
  / вариант чистки дерева - нерационально. В случае нехватки памяти сжатие
  / ухудшается заметно сильнее, чем в случае используемого сейчас алгоритма.

  / Все-же из этой разработки можно использовать 
  / 1. алгоритм подсчета свободных ссылок, исходники будут чище.
  / 2. алгоритм чистки списка активных узлов после чистки дерева (сейчас 
  /    список просто становится пустым).

  Bee_BasePacker.Pas:

  * Из алгоритма удалено все лишнее, и оставлено только все необходимое:

    Основная фишка - проверяем улучшение от замены Increment с 16 на 8.
    Заменяем вычисление Part [MaxSymbol + 3] на вариант из Bee 0.6.3.
    Используем IncreaseIndex из Bee 0.6.3.
    Аккуратнее работаем с удвоением Recent symbol, без выкрутасов.
    Update exclusions: исправлен случай обновления нового детерминированного контекста.
    Part [MaxSymbol + 3]: Расширен диапазон.
    Part [MaxSymbol + 2]: Используем Recency scaling.

21.02.2003

  / Подготовлены параметры для Bee 0.7.4 ver I.
  / Алгоритм скомпилирован для отправки на тестирование.

03.03.2003

  / Выделяем range coder из Bee_BasePackerQ5.pas в отдельный модуль:
  / -- Bee_RangeCoder0.Pas, арифметический кодировщик;
  / -- Bee_RangeCoder1.Pas, range coder на основе Shindlet;
  / -- Bee_RangeCoder2.Pas, range coder на основе Shindler_var1;
  / -- Bee_Codec.Pas, оболочка для rangecoder для практического использования в качестве кодировщика после моделлера;
   
  ! Есть ошибка при использовании Bee_Codec.Pas + Bee_RangeCoder0.Pas.

    -- При распаковке или тестировании - EAccessViolation.

  * Исправлено, работает.

05.03.2003

  Bee_Codec.Pas:

  * Мелкие изменения, увеличена производительность.

  Bee_Modeller.Pas:

  * Мелкие изменения TBaseCoder.Cut, увеличена производительность.
  / Нет совместимости с Bee 0.7.4.i.

  Bee_xxx:

  * Мелкие изменения с целью повысить удобочитаемость кода.

06.03.2003

  / С помощью Eugeny Shelwien построил "правильную" версию rangecoder 
  / на основе модифицированного shindler.inc.

  Версия Bee 0.7.5:

  / Новая версия алгоритма несовместима с Bee 0.7.4.i.

  Bee_RangeCoder22.Pas:

  + Реализация rangecoder с MaxFreq = 2^24, диапазон Range не вырождается 
    при использовании TotFreq близких к MaxFreq.

  / Есть основания ожидать, что данная версия без модификации моделлера
  / может увеличить эффективность на 0.1% и производительность на 3%. 
  / Попробуем построить параметры для этой версии.

10.03.2003

  Версия Bee 0.7.6:

  / Новая версия алгоритма несовместима с Bee 0.7.5.

  Bee_Codec:

  * Модификация, направленная на некоторое упрощение и ускорение кода.

  Bee_Modeller:

  * Оптимизировал использование параметра Part [MaxSymbol + 2].

  Bee_Modeller:

  * Оптимизировал Counter Update. Работает.
  * Part [MaxSymbol + 4] = Increment.

22.03.2003

  / Параметр Part [MaxSymbol + 2] на некоторых типах файлов зашкаливает. 
    Его значение масштабируется в диапазон [1; 2], и зашкаливание означает, 
    что диапазон слишком узок, и оптимальное значение лежит за его пределами.

    Попробуем расширить его до [1; 9].

  Версия 0.7.6.a:

  / Новая версия несовместима с Bee 0.7.6.

  Bee_Modeller:

  * Диапазон Part [MaxSymbol + 2] расширен до [1; 9].

31.03.03

  ? Есть одна ошибочка? Проверяем...

02.04.2003

  / "Ошибочка" это не ошибка. Может быть, исправление этого факта способствует 
    лучшей оптимизации, но потом исходный алгоритм на построенных параметрах 
    работает так же успешно. Только предположительно, быстрее, потому что нет 
    лишней проверки.

  Версия 0.7.6.c:

  / Новая версия несовместима с Bee 0.7.6.

  / Есть идея, как совместить бонус на файлах *.DOC, *.EXE, *.INI, *.TXT, 
    *.XLS, получаемый с помощью версии Bee 0.7.6.b, с бонусом на файлах *.C, 
    *.Fdb, получаемым с помощью версии Bee 0.7.6.

  / Существенная разница состоит в методе апдейта частот.

  / Для Bee 0.7.6 апдейтится частота только одного контекста.
  / Для Bee 0.7.6.b апдейтятся частоты всех контекстов, которые старшие 
    того одного, указанного в методе Bee 0.7.6.

  / Для совмещения обоих случаев можно использовать свободный на данный 
    момент параметр Part [MaxSymbol + 4]. Для случая Bee 0.7.6 он должен при 
    оптимизации принять значение, близкое к нулю, а для случая Bee 0.7.6.b 
    он должен принять значение, близкое к Increment. 
    
  / Проверяем.

  Версия 0.7.6.c.b:

  * Ограничим диапазон Part [MaxSymbol + 4] величиной [0..256/7];

22.04.2003

  Версия Bee 0.7.6.d:

  / Небольшое исправление. Релиз.

  Версия BeeOpt 0.7.6.d:

  / Небольшое исправление. Релиз.

04.09.2003

  BeeOpt:

  + Изменен алгоритм вычисления вероятности мутации. 
    Должно влиять на качество оптимизации.

09.09.2003

  Bee:

  / Причесываем... Прирост производительности ~1%. ;)


10.09.2003

  BeeOpt:

  * При скрещивании особей конвертируем геном в форму, удобную для смешивания.
    Получаем бонусы генетической оптимизации, сохранив совместимость *.dat 
    файлов с форматом версии 0.7.6.d.

  Bee 0.7.7:

  * Изменен алгоритм сокращения списка контекстов.
    Теперь список может сокращаться на обоих шагах кодирования символа.

12.09.2003

  Bee:

  * Оптимизирован один из побочных циклов. Прирост производительности ~3%.

14.09.2003

  Bee:

  * Bee_Files: Оптимизирован TFileWriter.Write ().

23.09.2003

  BeeOpt 0.7.7.b:
  
  * Bee_MainForm.pas: 
  
    Ускорил передачу байтов на упаковку.

  * Bee_MainForm.pas: 
  
    Упростил генетический алгоритм. Теперь популяция 
    всегда имеет минимальный размер, и размер популяции не зависит от времени.

    Это приводит к тому, что скрещивание происходит всегда с наилучшими особями 
    текущей и соседних популяций, что ускоряет распространение лучших генов.
    Застревание в локальных минимумах в явном виде не наблюдалось, так что
    можно пренебречь этой возможностью.

    На небольшом 30К файле результат оптимизации оказался лучшим, чем результат
    оптимизации вариантом 0.7.7.

25.09.2003

  BeeOpt:

  * Подчищен алгоритм оптимизации, еще одни шаг к элитаризму.

  + Добавлена опция "-merge", позволяющая собрать все ".dat" файлы с данным 
    именем во всех подкаталогах в один файл, и приготовить его к пересчету.

20.02.2005

  BeeOpt:

  * Исключена ситуация, когда время тратится на оценку особи,
    которая идентична некоторой особи в популяции.

  / Проверить, что несжимаемые файлы обрабатываются правильно.

28.02.2005 

  BeeOpt:

  + Добавлена опция -reduce для исключения из необязательных строк
    из файла конфигурации.

2005.03.22

  Testing of Bee 0.7.7.g:

  [!] Adding of existing files does not overwrite existing files in archive,
      but makes multiple instance of file. [fixed 2005.03.27]

  [!] Listing "bee l archive" shows "no files" on any archive.
      However, "bee l archive *.*" works properly. [fixed 2005.03.26]

  [!] Testing "bee t archive" shows "no files" on any archive.
      However, "bee t archive *.*" works properly. [fixed 2005.03.26]

  [!] "-r" option now does not work. [fixed 2005.03.26]
  [!] "-s" option now does not work.

  [!] File headers become to unoptimal structure:

      Now [foMethod, foDictionary, foVersion, foTable] present 
      in any file header, instead of just if suitable.

2005.03.25

  [*] Source style agreement implemented in Bee_Headers.pas.

  [+] THeaders.AddItems:
  
      "bee a archive folder" now equals to "bee a archive folder\*\*.*"

2005.03.26

  [*] Source style agreement implemented in Bee_App.pas.
  [*] Source style agreement implemented in Bee_Common.pas.
  
  [*] Fixed bug of TApp.ListShell.

  [+] TApp.ProcessOptions:
  
      "bee a archive" now equals to "bee a archive *\*.*",
      "bee l archive" now equals to "bee l archive *\*.*", and so on. 

  [*] TApp.ProcessFilaMasks:
  
      "-r" option performes correctly.

2005.03.27

  [*] TApp.EncodeShell:

      Adding of non-solid files performes correctly.

2005.06.15

  [*] Update sources by Melchiorre Caruso:

      Bee.dpr
      Bee_App.pas
      Bee_Common.pas
      Bee_Headers.pas
      Bee_MainPacker.pas

2005.06.23

  [*] Update sources by Andrew Filinsky:

      Bee.dpr
      Bee_Crc.pas
      Bee_Files.pas
      Bee_RangeCoder1m.pas

2005.06.25

  Update sources by Andrew Filinsky:

  [*] Bee_Modeller.pas

      [*] Reduce memory consumption in TBaseCoder.SetDictionarySize ().
      [*] Translate all comments to English.

  Bug report:

  [!] "bee l <ArchiveName>" works, but
      "bee l <ArchiveName> <FileMask>" does not. [I.1]

  [!] "bee a <ArchiveName> <DirectoryName>" works on existing archive, but
      "bee a <ArchiveName> <DirectoryName> -r" does not. [I.2]

2005.06.27

  Update sources by Melchiorre Caruso:

  [*] Bee.dpr
  [*] Bee_App.pas
  [*] Bee_Common.pas
  [*] Bee_Headers.pas

2005.07.01

  Update sources by Andrew Filinsky:

  [*] Bee_Configuration.pas

      [*] Source code is formatted, comments are translated to English.

2005.07.07

  Bugfix to Bee_App.pas maked by Melchiorre Caruso.

2005.07.08

  Update sources by Andrew Filinsky:

  [*] Copyright information added to each of units.
  [*] Some comments added to some units.
  [*] Unsignificant source code rearrangement performed.
  [*] Latest Bee.ini added.

  v0.7.8 build 0153 maked.

2005.07.22

  Update sources by Melchiorre Caruso:
  
  [*] CharSet bug fixed.

2005.10.13

  Update sources by Melchiorre Caruso:
  
  [+] Auto extractor option (-a) added
  [*] Bug in THeaders.QuickSort fixed
  [+] Bee_Interface unit added
  [+] Bee_BlowFish unit added
  [*] Bee and BeeGui source code unifyed
  [+] Bee Lazarus project info (Bee.lpi) added
  [*] Significant source code rearrangement performed
  [+] Set temp-dir option (-y) added
  [!] CharSet bug refounded in BeeGui.

  V0.7.9 build 0205 maked.

2005.10.19

  Update sources by Melchiorre Caruso:

  [*] CharSet problem refixed (for Bee and BeeGui)
  [*] Bee_BlowFish unit updated
  [*] TBlowFish integrated in TFileReader and TFileWriter classes
  [+] Compiler directives file added.

  V0.7.9 build 230 maked.

2005.11.15
  
  Update sources by Melchiorre Caruso:

  [*] Important bug fixed in ProcessFilesToSwap
  [*] Bug fixed in RenameShell
  [*] Some little bugs fixed in ListShell
  [*] MethodToStr changed; Now minimum dictionary size ('a') is 0
  [+] X and E commands improved: now it's possible to use -f and -u options
  [*] BeeOpt source updated, now it uses new Bee_Headers.pas unit.

  V0.7.9 build 296 maked.

2006.01.05

  Update sources by Melchiorre Caruso:

  [*] Bug fixed in TBlowFish class.
  [*] Copyright information updated to each of units.

  V0.7.9 build 298 maked.

2007.01.23

  Update sources by Andrew Filinsky:

  [*] Bee_RangeCoder1m.pas renamed to Bee_RangeCoder.pas.
  [*] Bee_RangeCoder.pas, minor code optimization.
  [+] Bee_Common.pas, add some low-level functions.
  [*] Bee_Codec.pas, minor code optimization.

  [*] Bee_Modeller.pas, minor code optimization.

  [/] I discovered the important property:

      In Delphi5, the alignment of data to _16 bytes_ is significant!
      It is strange, but shift of data addresses in class by 8 bytes
      may cause a 4% penalty of performance speed. O_o.

      Mm.. I tested more.. This is even more complex.

  [/] Algorithm repformance increased up to 0%..15% for some options and data types.

  v0.7.9 build 301 maked.

2007.02.07

  Update sources by Andrew Filinsky:

  [*] Collect every assembler routines into new unit Bee_Assembler.pas.
  [*] Bee_Modeller.pas, code optimization, some cycles replaces by assembler routines.

  v0.7.9 build 305 maked.

2007.02.16

  Update sources by Andrew Filinsky:

  [*] Bee_Configuration.pas optimized.

  v0.7.9 build 316 maked.
  
2008.10.25

  Update sources by Melchiorre Caruso:

  [*] Bee_Modeller.pas, minor code optimization (for FreePascal Compiler);
  [*] Bee_Files.pas, some changes for FPC compatibility;
  [*] Bee_Interface.pas, added OnFatalError and OnRequest events;
  [*] Fixed some wilcard prolems;
  [*] Fixed some command line prolems;
  [*] Renamed "-c" option into "-cd" (bugfix); 
  [+] Added wilcard "?" and FileName-Matching functions;
  [*] Bee_Assembler.AddCardinal function, fixed source code incompatibility with FPC;
  [*] Bee_Headers.SearchNews renamed to ScanFileSystem;
  [*] compiler.inc added filenamecasesensitive directive;
  [*] Bee_Common.pas, renamed some functions;
  [+] Updated source code, platform independent;  
  [+] Bee_App.pas, added Tick function, if bee runs then result is true;
  [+] Bee_Modeller.pas, some changement to stop an active process;
  [+] Bee_App.OpenArchive procedure, fixed dangerous bug; 
      if archive is unknow it raises FatalError events and abort process;
  [+] Added "-l" option, archive list after an upgrade; 
  [*] Copyright information updated to each of units;
  [*] Unsignificant source code rearrangement performed;
  [*] Matrix.txt updated;
  [*] Usage.txt updated;
  [*] Bee_App.pas, bug fixed in AlreadyFileExists function and RenameShell procedure;
  [*] Bee_Files.pas, some changements for FPC compatibility.  

  v0.7.9 build 900 maked.